name: BeatSaberKeeper Publish
on:
  push:
    tags:
      - '*'
    branches:
      - 'feature/ddl'

jobs:
  build:
    strategy:
      matrix:
        channel: [Dev]
        targetPlatform: [x64]
        include:
          - channel: Dev
            ChannelName: Dev
            Configuration: Debug
            DistributionUrl: https://beatsaberkeeper.rgunti.ch
          # - channel: Release
          #   Configuration: Release
          #   ChannelName: Release
          #   DistributionUrl: https://beatsaberkeeper.rgunti.ch

    runs-on: windows-latest

    env:
      App_Packages_Archive: AppPackages.zip
      App_Packages_Directory: AppPackages
      Solution_Path: BeatKeeper.sln
      Wpf_Project_Path: BeatKeeper.App\BeatKeeper.App.csproj
      Actions_Allow_Unsecure_Commands: true # Allows AddPAth and SetEnv commands

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

      # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
      - name: Set Version
        uses: aarnott/nbgv@v0.3
        with:
          setAllVars: true

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.303'

      # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.1

      # Update the appxmanifest before build by setting the per-channel values set in the matrix such as
      # the Package.Identity.Version or the Package.Identity.Name, which allows multiple channels to be built.
      - name: Update manifest version
        run: |
          [xml]$manifest = get-content ".\$env:Wpf_Project_Path"
          $manifest.Project.PropertyGroup.InformationalVersion = "$env:NBGV_SemVer2"
          $manifest.Project.PropertyGroup.FileVersion = "$env:NBGV_AssemblyFileVersion"
          $manifest.Project.PropertyGroup.AssemblyVersion = "$env:NBGV_AssemblyVersion"
          $manifest.save(".\$env:Wpf_Project_Path")

      # Restore the application
      - name:  Restore
        run: msbuild $env:Wpf_Project_Path /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
        env:
          Configuration: ${{ matrix.Configuration }}
          RuntimeIdentifier: win-${{ matrix.targetplatform }}

      # Build the Windows Application Packaging project for Dev and Prod_Sideload
      - name: Build App for ${{ matrix.ChannelName }}
        run: msbuild $env:Wpf_Project_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:PublishProfile="Publish BSK" /p:PublishDir=./publish/full
        env:
          AppxBundle: Never
          AppInstallerUri: ${{ matrix.DistributionUrl }}
          BuildMode: SideloadOnly
          Configuration: ${{ matrix.Configuration }}
          GenerateAppInstallerFile: True
          TargetPlatform: ${{ matrix.targetplatform }}

      - name: Build Lite App for ${{ matrix.ChannelName }}
        run: msbuild $env:Wpf_Project_Path /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:PublishProfile="Publish BSK Lite" /p:PublishDir=./publish/lite
        env:
          AppxBundle: Never
          AppInstallerUri: ${{ matrix.DistributionUrl }}
          BuildMode: SideloadOnly
          Configuration: ${{ matrix.Configuration }}
          GenerateAppInstallerFile: True
          TargetPlatform: ${{ matrix.targetplatform }}

      # Archive the package
      - name: Create archive
        run: Compress-Archive -Path .\publish\* -DestinationPath BeatSaberKeeper_$env:NBGV_SemVer2.zip

      # Create the release:  https://github.com/actions/create-release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref}}.${{matrix.ChannelName}}.${{ matrix.targetplatform }}
          release_name:  ${{ github.ref }}.${{ matrix.ChannelName }}.${{ matrix.targetplatform }}
          draft: false
          prerelease: true

      # Upload release asset:   https://github.com/actions/upload-release-asset
      - name: Update release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: BeatSaberKeeper_${{ env.NBGV_SemVer2 }}.zip
          asset_name: BeatSaberKeeper_${{ env.NBGV_SemVer2 }}.zip
          asset_content_type: application/zip
